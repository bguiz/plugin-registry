{
    "project": {
        "name": "qryq",
        "description": "Maintains a general purpose registry of plugins",
        "version": "0.1.5"
    },
    "files": {
        "index.js": {
            "name": "index.js",
            "modules": {
                "PluginRegistry": 1
            },
            "classes": {
                "PluginRegistry": 1,
                "PluginRegistryFluentInterface": 1
            },
            "fors": {
                "PluginRegistry": 1,
                "PluginRegistryFluentInterface": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "PluginRegistry": {
            "name": "PluginRegistry",
            "submodules": {},
            "classes": {
                "PluginRegistry": 1,
                "PluginRegistryFluentInterface": 1
            },
            "fors": {
                "PluginRegistry": 1,
                "PluginRegistryFluentInterface": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "index.js",
            "line": 165
        }
    },
    "classes": {
        "PluginRegistry": {
            "name": "PluginRegistry",
            "shortname": "PluginRegistry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PluginRegistry",
            "namespace": "",
            "file": "index.js",
            "line": 12
        },
        "PluginRegistryFluentInterface": {
            "name": "PluginRegistryFluentInterface",
            "shortname": "PluginRegistryFluentInterface",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "PluginRegistry",
            "namespace": "",
            "file": "index.js",
            "line": 165,
            "description": "A fluent interface for interacting with a plugin registry"
        }
    },
    "classitems": [
        {
            "file": "index.js",
            "line": 135,
            "description": "Gets a registry with a specified name.\nIf one with this name does not exist, a new one is created (multiton pattern).",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "registryName",
                    "description": "**optional**",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "PluginRegistryFluentInterface"
            },
            "class": "PluginRegistry",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 179,
            "description": "Sets the context used by this plugin registry.\nMay only be called once.",
            "itemtype": "method",
            "name": "setContext",
            "chainable": 1,
            "params": [
                {
                    "name": "newContext",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 201,
            "description": "Add one or more plugins to this registry",
            "itemtype": "method",
            "name": "addPlugins",
            "chainable": 1,
            "params": [
                {
                    "name": "plugins",
                    "description": "",
                    "type": "String|PluginDefinition",
                    "multiple": true
                }
            ],
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 219,
            "itemtype": "method",
            "name": "addPluginImpl",
            "params": [
                {
                    "name": "pluginDefinition",
                    "description": "",
                    "type": "String|PluginDefinition"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 238,
            "description": "Returns all plugins of a particular category,\nor an empty array for a non-existent category.",
            "itemtype": "method",
            "name": "getAllPluginsOfCategory",
            "chainable": 1,
            "params": [
                {
                    "name": "category",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 251,
            "description": "Gets the entire plugin registry",
            "itemtype": "method",
            "name": "getFullPluginRegistry",
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 261,
            "description": "Gets the context used by this plugin registry.",
            "itemtype": "method",
            "name": "getContext",
            "class": "PluginRegistryFluentInterface",
            "module": "PluginRegistry"
        },
        {
            "file": "index.js",
            "line": 276,
            "description": "Forgets all registries and their plugins",
            "itemtype": "method",
            "name": "reset",
            "class": "PluginRegistry",
            "module": "PluginRegistry"
        }
    ],
    "warnings": []
}